<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <link href="/images/favicon.ico" rel="shortcut icon" type="image/png">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <meta content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0' name='viewport' />
    <meta name="viewport" content="width=device-width" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.5.2/animate.min.css" rel="stylesheet" />
    <link href="/stylesheets/light-bootstrap-dashboard.css?v=1.4.0" rel="stylesheet" />
	
    <link href="http://maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css" rel="stylesheet">
	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
	

    <link href="/stylesheets/bootstrap.min.css" rel="stylesheet" />

    <!-- Animation library for notifications   -->
    <link href="/stylesheets/animate.min.css" rel="stylesheet"/>
    <link href="/stylesheets/main.css" rel="stylesheet" />
    <!--  Light Bootstrap Table core CSS    -->
<style>
    .chart{
        text-align: center;
        margin-left: 10%;
        margin-top: 30%;
    }
</style>    

</head>
<body>
    <div class="wrapper">
        <div class="sidebar" data-image/image/sidebar-5.jpg>
		      <div class="sidebar-wrapper">
		

                    <div class="logo">
                        <a target="_blank" href="http://www.safe-lanes.com" class="simple-text">
                             <img src="/images/SafeLanes_logo.png" class="imgclass" />
                        </a>
                    </div>
                    <ul class="nav">
                        <li class="active">
                            <a href="/dashboard">
                               <p>Dashboard</p>
                            </a>
                        </li>
                        
					   						
						<li>
                            <a href="/employees">
                               <p>Employee Master</p>
                            </a>
                        </li>
						
                        <li>
                            <a href="/vdranalysiss">
                                <p>VDR Job Tracker</p>
                            </a>
                        </li>
                        <li>
                            <a href="/jobassignments">
                               <p>Vessel Job Tracker</p>
                            </a>
                        </li>
						<li>
                            <a href="/clients">
                               <p>Client Details</p>
                            </a>
                        </li>
						<li>
                            <a href="/observationanalysis">
                               <p>Observation Analysis</p>
                            </a>
                        </li>
                    </ul>
                </div>
        </div>
        
    <div class="main-panel" data-color="orange" >
        <nav class="navbar navbar-default navbar-fixed" >
            <div class="container-fluid">
	    <!--added new -->
	    	<div class="navbar-header">
                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navigation-example-2">
                        <span class="sr-only">Toggle navigation</span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                    </button>
                    <a class="navbar-brand" href="#"></a>
                </div>
	   <!--added new -->
                <div  align="right">
                   <a href="">Account</a>
                   &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
                   <a href="#">Log out</a>
                </div>
            </div>
		</nav>
		
        <div class="content">
            <div class="container-fluid">
               <div class="row">
                  <div class="col-md-2">
                    <div class="form-group">
                      <label>Select Year *</label>
                        <select name="year" class="form-control" id="year">
						 <option value="All">All</option>
						 <option value="2017">2017</option>
				     	 <option value="2018">2018</option>
						 <option value="2019">2019</option>
						 <option value="2020">2020</option>
						 <option value="2021">2021</option>
						 <option value="2022">2022</option>
						</select>
				    </div>
                  </div>
				  <div class="col-md-2">
                    <div class="form-group">
                      <label>Select Type</label>
                        <select name="type" class="form-control" id="type">
						<option value=''>Select</option>
						<option value="Monthly">Monthly</option>
						<option value="Quarterly">Quarterly</option>
						</select>
                    </div>
                  </div>
				  <div class="col-md-2">
                    <div class="form-group">
                      <label>Select Month</label>
                         <select name="month" class="form-control" id="month">
						   <option value=''>Select</option>
				           <option value="January">January</option>
				     	   <option value="February">February</option>
						   <option value="March">March</option>
						   <option value="April">April</option>
						   <option value="May">May</option>
						   <option value="June">June</option>
						   <option value="July">July</option>
						   <option value="August">August</option>
						   <option value="September">September</option>
						   <option value="October">October</option>
						   <option value="November">November</option>
						   <option value="December">December</option>
                         </select>
					</div>
                  </div>
								   
								   
				  <div class="col-md-2">
                    <div class="form-group">
                        <label>Select Quarter</label>
                            <select name="quarter" class="form-control" id="quarter">
							<option value=''>Select</option>
				            <option value="Q1">Q1</option>
							<option value="Q2">Q2</option>
							<option value="Q3">Q3</option>
							<option value="Q4">Q4</option>
							</select>
                    </div>
                  </div>
			   </div>
								   
								   
								  
			    <div class ="row">
				   <div class="col-md-2"></div>
				   <div class="col-md-2"></div>
				   <div class="col-md-2"></div>
				   <div class="col-md-2"></div>
				   <div class="col-md-2">
				        <button id="btnGenerate" class="btn btn-small pull-left">Generate</button>
				   </div>
				</div>
								   
								   
			   
              <div class="row">
                  <div class="col-md-4 col-sm-12">
                    <div class="panel panel-default">
                        <div class="panel-heading clearfix">
                            <h3>Vessel Job Tracker Analysis</h3>
                        </div>
                        <div class="panel-body">
                            <div id="piechart" class="chart"></div>
                        </div>
                        <div class="panel-footer clearfix">
                            <span class="glyphicon glyphicon-pencil pull-left">  Active</span>
                            <button id="btnReset" class="btn btn-small pull-right">Reset</button>
                        </div>
                    </div>
                  </div>
                  <div class="col-md-8 col-sm-12">
                        <div class="panel panel-default">
                                <div class="panel-heading clearfix">
                                    <h3>VDR Analysis</h3>
                                </div>
                                <div class="panel-body">
                                    <div id="barchart" class="chart"></div>
                                </div>
                                <div class="panel-footer clearfix">
                                    <span class="glyphicon glyphicon-pencil pull-left">  Active</span>
                                    <button id="btnReset" class="btn btn-small pull-right">Reset</button>
                                </div>
                        </div>
                  </div>
              </div>
            </div>
        </div>
    </div>
  </div>
</body>
</html>

<script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
<script src="/javascripts/jquery.3.2.1.min.js" type="text/javascript"></script>
<script src="/javascripts/chartist.min.js"></script>
<script src="/javascripts/bootstrap-notify.js"></script>
<script src="/javascripts/bootstrap.min.js" type="text/javascript"></script>
<!-- <script src="//maxcdn.bootstrapcdn.com/bootstrap/3.3.1/js/bootstrap.min.js"></script> -->
<script src="/javascripts/light-bootstrap-dashboard.js?v=1.4.0"></script>
<!-- <script src="https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.3/underscore-min.js"></script> -->

<script type="text/javascript">
var w = 300,                        //width
    h = 300,                            //height
    r = 100,                            //radius
    color = d3.scale.category20c();     //builtin range of colors
    data = [{"label":"one", "value":20}, 
    {"label":"two", "value":50}, 
    {"label":"three", "value":30}];
    
	$("#btnGenerate").click(function(){
	
	    var type = document.getElementById("type").value; 
		var month = document.getElementById("month").value;
		var quarter = document.getElementById("quarter").value;
		if(type == "Monthly" && month==''){
		   alert("Please Select the Month");
		}
		else if(type == "Quarterly" && quarter==''){
		    alert("Please Select the Quarter");
		}
	
        loadPie();
    });
    
    $("#btnReset").click(function(){
        loadPie();
    });
    function loadPie(){
        $("#piechart").html('');
		
		var datetime;
		var year = document.getElementById("year").value;
		var month = document.getElementById("month").value;
		var quarter = document.getElementById("quarter").value;
		
		
		
		if (month!=''){
		   datetime = month + "-" + year;
		
		}
		if(quarter!=''){
		   datetime = quarter + "-" + year;
		}
		
		if(month=='' && quarter=='' && year != '')
		{
		   datetime = year;
		}
		
		
		alert(datetime);
        $.get('/d3sample/datetime', function(res) {
            console.log(res);
            var fdata = JSON.parse(res);
            console.log(fdata.length);
            renderPieChart(fdata);
        
        });
    }
function renderPieChart(fdata) {
    var vis = d3.select("#piechart")
                .append("svg:svg")              //create the SVG element inside the <body>
                .data([fdata])                   //associate our data with the document
                    .attr("width", w)           //set the width and height of our visualization (these will be attributes of the <svg> tag
                    .attr("height", h)
                .append("svg:g")                //make a group to hold our pie chart
                    .attr("transform", "translate(" + r + "," + r + ")")    //move the center of the pie chart from 0, 0 to radius, radius
                var arc = d3.svg.arc()              //this will create <path> elements for us using arc data
                .outerRadius(r);
                var pie = d3.layout.pie()           //this will create arc data for us given a list of values
                .value(function(d) { return d.yearCount; });    //we must tell it out to access the value of each element in our data array
                var arcs = vis.selectAll("g.slice")     //this selects all <g> elements with class slice (there aren't any yet)
                .data(pie)                          //associate the generated pie data (an array of arcs, each having startAngle, endAngle and value properties) 
                .enter()                            //this will create <g> elements for every "extra" data element that should be associated with a selection. The result is creating a <g> for every object in the data array
                    .append("svg:g")                //create a group to hold each slice (we will have a <path> and a <text> element associated with each slice)
                        .attr("class", "slice");    //allow us to style things in the slices (like text)
                arcs.append("svg:path")
                        .attr("fill", function(d, i) { return color(i); } ) //set the color for each slice to be chosen from the color function defined above
                        .attr("d", arc);                                    //this creates the actual SVG path using the associated data (pie) with the arc drawing function
                arcs.append("svg:text")                                     //add a label to each slice
                        .attr("transform", function(d) {                    //set the label's origin to the center of the arc
                        //we have to make sure to set these before calling arc.centroid
                        d.innerRadius = 0;
                        d.outerRadius = r;
                        return "translate(" + arc.centroid(d) + ")";        //this gives us a pair of coordinates like [50, 50]
                    })
                    .attr("text-anchor", "middle")                          //center the text on it's origin
                    .text(function(d, i) { return fdata[i].year; });        //get the label from our original data array
    
    vis.selectAll("g.slice").on('click', function(d, i){
        alert(fdata[i].yearCount);
        renderPieChartQuartely(fdata[i].quarterlist);
    })
}
function renderPieChartQuartely(quarterData) {

$("#piechart").html('');
var vis1 = d3.select("#piechart")
            .append("svg:svg")              //create the SVG element inside the <body>
            .data([quarterData])                   //associate our data with the document
                .attr("width", w)           //set the width and height of our visualization (these will be attributes of the <svg> tag
                .attr("height", h)
            .append("svg:g")                //make a group to hold our pie chart
                .attr("transform", "translate(" + r + "," + r + ")")    //move the center of the pie chart from 0, 0 to radius, radius
            var arc = d3.svg.arc()              //this will create <path> elements for us using arc data
            .outerRadius(r);
            var pie = d3.layout.pie()           //this will create arc data for us given a list of values
            .value(function(d) { return d.quarterCount; });    //we must tell it out to access the value of each element in our data array
            var arcs = vis1.selectAll("g.slice")     //this selects all <g> elements with class slice (there aren't any yet)
            .data(pie)                          //associate the generated pie data (an array of arcs, each having startAngle, endAngle and value properties) 
            .enter()                            //this will create <g> elements for every "extra" data element that should be associated with a selection. The result is creating a <g> for every object in the data array
                .append("svg:g")                //create a group to hold each slice (we will have a <path> and a <text> element associated with each slice)
                    .attr("class", "slice");    //allow us to style things in the slices (like text)
            arcs.append("svg:path")
                    .attr("fill", function(d, i) { return color(i); } ) //set the color for each slice to be chosen from the color function defined above
                    .attr("d", arc);                                    //this creates the actual SVG path using the associated data (pie) with the arc drawing function
            arcs.append("svg:text")                                     //add a label to each slice
                    .attr("transform", function(d) {                    //set the label's origin to the center of the arc
                    //we have to make sure to set these before calling arc.centroid
                    d.innerRadius = 0;
                    d.outerRadius = r;
                    return "translate(" + arc.centroid(d) + ")";        //this gives us a pair of coordinates like [50, 50]
                })
                .attr("text-anchor", "middle")                          //center the text on it's origin
                .text(function(d, i) { return quarterData[i].quarter; });        //get the label from our original data array
        
    vis1.selectAll("g.slice").on('click', function(d, i){
        alert(quarterData[i].quarterCount);
        renderPieChartMonthly(quarterData[i].monthlist);
    })                
}
function renderPieChartMonthly(monthData) {

$("#piechart").html('');
var vis1 = d3.select("#piechart")
            .append("svg:svg")              //create the SVG element inside the <body>
            .data([monthData])                   //associate our data with the document
                .attr("width", w)           //set the width and height of our visualization (these will be attributes of the <svg> tag
                .attr("height", h)
            .append("svg:g")                //make a group to hold our pie chart
                .attr("transform", "translate(" + r + "," + r + ")")    //move the center of the pie chart from 0, 0 to radius, radius
            var arc = d3.svg.arc()              //this will create <path> elements for us using arc data
            .outerRadius(r);
            var pie = d3.layout.pie()           //this will create arc data for us given a list of values
            .value(function(d) { return d.monthCount; });    //we must tell it out to access the value of each element in our data array
            var arcs = vis1.selectAll("g.slice")     //this selects all <g> elements with class slice (there aren't any yet)
            .data(pie)                          //associate the generated pie data (an array of arcs, each having startAngle, endAngle and value properties) 
            .enter()                            //this will create <g> elements for every "extra" data element that should be associated with a selection. The result is creating a <g> for every object in the data array
                .append("svg:g")                //create a group to hold each slice (we will have a <path> and a <text> element associated with each slice)
                    .attr("class", "slice");    //allow us to style things in the slices (like text)
            arcs.append("svg:path")
                    .attr("fill", function(d, i) { return color(i); } ) //set the color for each slice to be chosen from the color function defined above
                    .attr("d", arc);                                    //this creates the actual SVG path using the associated data (pie) with the arc drawing function
            arcs.append("svg:text")                                     //add a label to each slice
                    .attr("transform", function(d) {                    //set the label's origin to the center of the arc
                    //we have to make sure to set these before calling arc.centroid
                    d.innerRadius = 0;
                    d.outerRadius = r;
                    return "translate(" + arc.centroid(d) + ")";        //this gives us a pair of coordinates like [50, 50]
                })
                .attr("text-anchor", "middle")                          //center the text on it's origin
                .text(function(d, i) { return monthData[i].month; });        //get the label from our original data array
}


jQuery( document ).ready(function( $ ) {
   $("#year").val('All');
   
    
	$type = $('#type');
    $type.change(function() {
       
	   var value = document.getElementById("type").value;
	    $("#quarter").prop("disabled", false);	   
		$("#month").prop("disabled", false);
	   
	   if (value == "Monthly")
	       $("#quarter").prop("disabled", true);
		   
       else if(value == "Quarterly")
	       $("#month").prop("disabled", true);
	   else if(value == ''){
           $("#quarter").prop("disabled", true);	   
		   $("#month").prop("disabled", true);
		}
		   
	
    }).change();

	
	$year = $('#year');
    $year.change(function() {
       
	   var value = document.getElementById("year").value;
	    if(value == "All"){
		
			$("#type").prop("disabled", true);
	    }
	    else{
			
			$("#type").prop("disabled", false);
	    }
		   
	
    }).change();
	
	loadPie();
	
});

</script>
