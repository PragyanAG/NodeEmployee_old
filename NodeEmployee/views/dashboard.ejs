<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <link href="/images/favicon.ico" rel="shortcut icon" type="image/png">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <meta content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0' name='viewport' />
    <meta name="viewport" content="width=device-width" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.5.2/animate.min.css" rel="stylesheet" />
    <link href="/stylesheets/light-bootstrap-dashboard.css?v=1.4.0" rel="stylesheet" />
	
    <link href="http://maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css" rel="stylesheet">
	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
	

    <link href="/stylesheets/bootstrap.min.css" rel="stylesheet" />

    <!-- Animation library for notifications   -->
    <link href="/stylesheets/animate.min.css" rel="stylesheet"/>
    <link href="/stylesheets/main.css" rel="stylesheet" />
    <!--  Light Bootstrap Table core CSS    -->
<style>
    .chart{
        text-align: center;
        margin-left: 10%;
        margin-top: 30%;
    }
</style>    

</head>
<body>
    <div class="wrapper">
        <div class="sidebar" data-image/image/sidebar-5.jpg>
		      <div class="sidebar-wrapper">
		

                    <div class="logo">
                        <a target="_blank" href="http://www.safe-lanes.com" class="simple-text">
                             <img src="/images/SafeLanes_logo.png" class="imgclass" />
                        </a>
                    </div>
                    <ul class="nav">
                        <li class="active">
                            <a href="/dashboard">
                               <p>Dashboard</p>
                            </a>
                        </li>
                        
					   						
						<li>
                            <a href="/employees">
                               <p>Employee Master</p>
                            </a>
                        </li>
						
                        <li>
                            <a href="/vdranalysiss">
                                <p>VDR Job Tracker</p>
                            </a>
                        </li>
                        <li>
                            <a href="/jobassignments">
                               <p>Vessel Job Tracker</p>
                            </a>
                        </li>
						<li>
                            <a href="/clients">
                               <p>Client Details</p>
                            </a>
                        </li>
						<li>
                            <a href="/observationanalysis">
                               <p>Observation Analysis</p>
                            </a>
                        </li>
                    </ul>
                </div>
        </div>
        
    <div class="main-panel" data-color="orange" >
        <nav class="navbar navbar-default navbar-fixed" >
            <div class="container-fluid">
	    <!--added new -->
	    	<div class="navbar-header">
                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navigation-example-2">
                        <span class="sr-only">Toggle navigation</span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                    </button>
                    <a class="navbar-brand" href="#">KPI COMPLIANCE</a>
                </div>
	   <!--added new -->
                <div  align="right">
                   <a href="">Account</a>
                   &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
                   <a href="#">Log out</a>
                </div>
            </div>
		</nav>
		
        <div class="content">
            <div class="container-fluid">
            <div class="row">
                  <div class="col-md-2">
                    <div class="form-group">
                      <label>Select Year</label>
                        <select name="year" class="form-control" id="year">
						 
						 <% for(var i=0; i < year.length; i++){ %>
							<option value='<%= year[i].name %>'><%= year[i].name %></li>
                         <% } %>
								        
						</select>
				    </div>
                  </div>
				  <div class="col-md-2">
                    <div class="form-group">
                      <label>Select Type</label>
                        <select name="type" class="form-control" id="type">
						<option value=''>Select</option>
						<option value="Monthly">Monthly</option>
						<option value="Quarterly">Quarterly</option>
						</select>
                    </div>
                  </div>
				  <div class="col-md-2">
                    <div class="form-group">
                      <label>Select Month</label>
                         <select name="month" class="form-control" id="month">
						   <option value=''>Select</option>
				           <option value="January">January</option>
				     	   <option value="February">February</option>
						   <option value="March">March</option>
						   <option value="April">April</option>
						   <option value="May">May</option>
						   <option value="June">June</option>
						   <option value="July">July</option>
						   <option value="August">August</option>
						   <option value="September">September</option>
						   <option value="October">October</option>
						   <option value="November">November</option>
						   <option value="December">December</option>
                         </select>
					</div>
                  </div>
								   
								   
				  <div class="col-md-2">
                    <div class="form-group">
                        <label>Select Quarter</label>
                            <select name="quarter" class="form-control" id="quarter">
							<option value=''>Select</option>
				            <option value="Q1">Q1</option>
							<option value="Q2">Q2</option>
							<option value="Q3">Q3</option>
							<option value="Q4">Q4</option>
							</select>
                    </div>
                  </div>
				  
				  
			   </div>
								   
								   
								  
			    <div class ="row">
				   <div class="col-md-2"></div>
				   <div class="col-md-2"></div>
				   <div class="col-md-2"></div>
				   <div class="col-md-2"></div>
				   <div class="col-md-2">
				        <button id="btnGenerate" class="btn btn-info btn-fill pull-right">Generate</button>
				   </div>
				</div>
								   
			 
              <div class="row">
                  <div class="col-md-5 col-sm-12">
                    <div class="panel panel-default">
                        <div class="panel-heading clearfix">
                            <h3>VESSELS</h3>
                        </div>
                        <div class="panel-body">
                            <div id="jobpiechart" class="chart"></div>
                        </div>
                       
                    </div>
                  </div>
                  <div class="col-md-5 col-sm-12">
                        <div class="panel panel-default">
                                <div class="panel-heading clearfix">
                                    <h3>VDR ANALYSIS</h3>
                                </div>
                                <div class="panel-body">
                                   <div id="vdrpiechart" class="chart"></div>
                                </div>
                                
                        </div>
                  </div>
              </div>
            </div>
        </div>
    </div>
  </div>
</body>
</html>

<script src="http://d3js.org/d3.v4.min.js" charset="utf-8"></script>
<script src="/javascripts/jquery.3.2.1.min.js" type="text/javascript"></script>
<script src="/javascripts/chartist.min.js"></script>
<script src="/javascripts/bootstrap-notify.js"></script>
<script src="/javascripts/bootstrap.min.js" type="text/javascript"></script>
<!-- <script src="//maxcdn.bootstrapcdn.com/bootstrap/3.3.1/js/bootstrap.min.js"></script> -->
<script src="/javascripts/light-bootstrap-dashboard.js?v=1.4.0"></script>
<!-- <script src="https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.3/underscore-min.js"></script> -->

<script type="text/javascript">

jQuery( document ).ready(function( $ ) {
   $("#year").val('All');
   
    
	$type = $('#type');
    $type.change(function() {
       
	   var value = document.getElementById("type").value;
	    $("#quarter").prop("disabled", false);	   
		$("#month").prop("disabled", false);
	   
	   if (value == "Monthly")
	       $("#quarter").prop("disabled", true);
		   
       else if(value == "Quarterly")
	       $("#month").prop("disabled", true);
	   else if(value == ''){
           $("#quarter").prop("disabled", true);	   
		   $("#month").prop("disabled", true);
		}
		   
	
    }).change();

    $year = $('#year');
    $year.change(function() {
       
	   var value = document.getElementById("year").value;
	    if(value == "All"){
		
			$("#type").prop("disabled", true);
	    }
	    else{
			
			$("#type").prop("disabled", false);
	    }
		   
	
    }).change();
	
	loadPie();
	
});

    
    $("#btnGenerate").click(function(){
	    $("#vdrpiechart").html('');
		$("#jobpiechart").html('');
	    var type = document.getElementById("type").value; 
		var month = document.getElementById("month").value;
		var quarter = document.getElementById("quarter").value;
		if(type == "Monthly" && month==''){
		   alert("Please Select the Month");
		}
		else if(type == "Quarterly" && quarter==''){
		    alert("Please Select the Quarter");
		}
	
        loadPie();
    });
    
    function loadPie(){
        $("#jobpiechart").html('');
        $.get('/d3jobsample', function(res) {
                
                var fdata1 = JSON.parse(res);
				
                drawPieChart1(fdata1);
        
            });
		$("#vdrpiechart").html('');
		
        $.get('/d3vdrsample', function(res) {
                
                var fdata2 = JSON.parse(res);
				
				drawPieChart2(fdata2);
        
            });
    }
    

    function drawPieChart1(data) {
       
            var text = "";

            var width = 200;
            var height = 300;
            var thickness = 40;
            var duration = 750;
            var padding = 10;
            var opacity = .8;
            var opacityHover = 1;
            var otherOpacityOnHover = .8;
            var tooltipMargin = 13;

            var radius = Math.min(width-padding, height-padding) / 2;
            var color = d3.scaleOrdinal(d3.schemeCategory10);

            var svg = d3.select("#jobpiechart")
            .append('svg')
            .attr('class', 'pie')
            .attr('width', width)
            .attr('height', height);

            var g = svg.append('g')
            .attr('transform', 'translate(' + (width/2) + ',' + (height/2) + ')');

            var arc = d3.arc()
            .innerRadius(0)
            .outerRadius(radius);

            var pie = d3.pie()
            .value(function(d) { return d.yearCount; })
            .sort(null);

            var path = g.selectAll('path')
            .data(pie(data))
            .enter()
            .append("g")  
            .append('path')
            .attr('d', arc)
            .attr('fill', (d,i) => color(i))
            .style('opacity', opacity)
            .style('stroke', 'white')
            .on("mouseover", function(d) {
                d3.selectAll('path')
                    .style("opacity", otherOpacityOnHover);
                d3.select(this) 
                    .style("opacity", opacityHover);

                let g = d3.select("svg")
                    .style("cursor", "pointer")
                    .append("g")
                    .attr("class", "tooltip")
                    .style("opacity", 0);
            
                g.append("text")
                    .attr("class", "name-text")
                    .text(`${d.data.year} (${d.data.yearCount})`)
                    .attr('text-anchor', 'middle');
                
                let text = g.select("text");
                let bbox = text.node().getBBox();
                let padding = 2;
                g.insert("rect", "text")
                    .attr("x", bbox.x - padding)
                    .attr("y", bbox.y - padding)
                    .attr("width", bbox.width + (padding*2))
                    .attr("height", bbox.height + (padding*2))
                    .style("fill", "white")
                    .style("opacity", 0.75);
                })
            .on("mousemove", function(d) {
                    let mousePosition = d3.mouse(this);
                    let x = mousePosition[0] + width/2;
                    let y = mousePosition[1] + height/2 - tooltipMargin;
                
                    let text = d3.select('.tooltip text');
                    let bbox = text.node().getBBox();
                    if(x - bbox.width/2 < 0) {
                    x = bbox.width/2;
                    }
                    else if(width - x - bbox.width/2 < 0) {
                    x = width - bbox.width/2;
                    }
                
                    if(y - bbox.height/2 < 0) {
                    y = bbox.height + tooltipMargin * 2;
                    }
                    else if(height - y - bbox.height/2 < 0) {
                    y = height - bbox.height/2;
                    }
                
                    d3.select('.tooltip')
                    .style("opacity", 1)
                    .attr('transform',`translate(${x}, ${y})`);
                })
            .on("mouseout", function(d) {   
                d3.select("svg")
                    .style("cursor", "none")  
                    .select(".tooltip").remove();
                d3.selectAll('path')
                    .style("opacity", opacity);
                })
            .on("touchstart", function(d) {
                d3.select("svg")
                    .style("cursor", "none");    
            })
            .each(function(d, i) { this._current = i; });

            let legend = d3.select("#chart").append('div')
                        .attr('class', 'legend')
                        .style('margin-top', '30px');

            let keys = legend.selectAll('.key')
                        .data(data)
                        .enter().append('div')
                        .attr('class', 'key')
                        .style('display', 'flex')
                        .style('align-items', 'center')
                        .style('margin-right', '20px');

                    keys.append('div')
                        .attr('class', 'symbol')
                        .style('height', '10px')
                        .style('width', '10px')
                        .style('margin', '5px 5px')
                        .style('background-color', (d, i) => color(i));

                    keys.append('div')
                        .attr('class', 'name')
                        .text(d => `${d.year} (${d.yearCount})`);

                    keys.exit().remove();
    }

    function drawPieChart2(data) {
       
            var text = "";

            var width = 200;
            var height = 300;
            var thickness = 40;
            var duration = 750;
            var padding = 10;
            var opacity = .8;
            var opacityHover = 1;
            var otherOpacityOnHover = .8;
            var tooltipMargin = 13;

            var radius = Math.min(width-padding, height-padding) / 2;
            var color = d3.scaleOrdinal(d3.schemeCategory10);

            var svg = d3.select("#vdrpiechart")
            .append('svg')
            .attr('class', 'pie')
            .attr('width', width)
            .attr('height', height);

            var g = svg.append('g')
            .attr('transform', 'translate(' + (width/2) + ',' + (height/2) + ')');

            var arc = d3.arc()
            .innerRadius(0)
            .outerRadius(radius);

            var pie = d3.pie()
            .value(function(d) { return d.yearCount; })
            .sort(null);

            var path = g.selectAll('path')
            .data(pie(data))
            .enter()
            .append("g")  
            .append('path')
            .attr('d', arc)
            .attr('fill', (d,i) => color(i))
            .style('opacity', opacity)
            .style('stroke', 'white')
            .on("mouseover", function(d) {
                d3.selectAll('path')
                    .style("opacity", otherOpacityOnHover);
                d3.select(this) 
                    .style("opacity", opacityHover);

                let g = d3.select("svg")
                    .style("cursor", "pointer")
                    .append("g")
                    .attr("class", "tooltip")
                    .style("opacity", 0);
            
                g.append("text")
                    .attr("class", "name-text")
                    .text(`${d.data.year} (${d.data.yearCount})`)
                    .attr('text-anchor', 'middle');
                
                let text = g.select("text");
                let bbox = text.node().getBBox();
                let padding = 2;
                g.insert("rect", "text")
                    .attr("x", bbox.x - padding)
                    .attr("y", bbox.y - padding)
                    .attr("width", bbox.width + (padding*2))
                    .attr("height", bbox.height + (padding*2))
                    .style("fill", "white")
                    .style("opacity", 0.75);
                })
            .on("mousemove", function(d) {
                    let mousePosition = d3.mouse(this);
                    let x = mousePosition[0] + width/2;
                    let y = mousePosition[1] + height/2 - tooltipMargin;
                
                    let text = d3.select('.tooltip text');
                    let bbox = text.node().getBBox();
                    if(x - bbox.width/2 < 0) {
                    x = bbox.width/2;
                    }
                    else if(width - x - bbox.width/2 < 0) {
                    x = width - bbox.width/2;
                    }
                
                    if(y - bbox.height/2 < 0) {
                    y = bbox.height + tooltipMargin * 2;
                    }
                    else if(height - y - bbox.height/2 < 0) {
                    y = height - bbox.height/2;
                    }
                
                    d3.select('.tooltip')
                    .style("opacity", 1)
                    .attr('transform',`translate(${x}, ${y})`);
                })
            .on("mouseout", function(d) {   
                d3.select("svg")
                    .style("cursor", "none")  
                    .select(".tooltip").remove();
                d3.selectAll('path')
                    .style("opacity", opacity);
                })
            .on("touchstart", function(d) {
                d3.select("svg")
                    .style("cursor", "none");    
            })
            .each(function(d, i) { this._current = i; });

            let legend = d3.select("#chart").append('div')
                        .attr('class', 'legend')
                        .style('margin-top', '30px');

            let keys = legend.selectAll('.key')
                        .data(data)
                        .enter().append('div')
                        .attr('class', 'key')
                        .style('display', 'flex')
                        .style('align-items', 'center')
                        .style('margin-right', '20px');

                    keys.append('div')
                        .attr('class', 'symbol')
                        .style('height', '10px')
                        .style('width', '10px')
                        .style('margin', '5px 5px')
                        .style('background-color', (d, i) => color(i));

                    keys.append('div')
                        .attr('class', 'name')
                        .text(d => `${d.year} (${d.yearCount})`);

                    keys.exit().remove();
    }


</script>

